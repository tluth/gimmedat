name: Deploy the Gimmedat Frontend
env:
  CI: false

on:
  push:
    branches:
      - main
    paths-ignore:
      - "build/**"
      - ".github/**"
      - "infra/**"
      - "backend/**"

  workflow_dispatch:
    inputs:
      env:
        description: 'Environment to deploy to "dev" or "prod"'
        required: true
        type: choice
        default: "dev"
        options:
          - "dev"
          - "prod"

permissions:
  id-token: write
  contents: read

jobs:
  deployment:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Set environment
        id: environment
        run: |
          ENV_INPUT=${{ inputs.env }}
          DEPLOY_ENVIRONMENT=${ENV_INPUT:-"dev"}
          echo "::set-output name=DEPLOY_ENVIRONMENT::${DEPLOY_ENVIRONMENT}"
          ./build/scripts/accountid.sh ${DEPLOY_ENVIRONMENT}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: cd frontend && pnpm install

      - name: Build
        run: cd frontend && pnpm run build
        env:
          ENVIRONMENT: ${{ steps.environment.outputs.DEPLOY_ENVIRONMENT }}
          REACT_APP_API_URL: https://api.gimmedat.bulgingdiscs.fun #temp hardcoded API URL
          VITE_APP_API_URL: https://api.gimmedat.bulgingdiscs.fun #temp hardcoded API URL
          VITE_EMAILJS_SERVICE_ID: ${{ secrets.VITE_EMAILJS_SERVICE_ID }}
          VITE_EMAILJS_TEMPLATE_ID: ${{ secrets.VITE_EMAILJS_TEMPLATE_ID }}
          VITE_EMAILJS_PUBLIC_KEY: ${{ secrets.VITE_EMAILJS_PUBLIC_KEY }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::${{ steps.environment.outputs.ACCOUNT_ID }}:role/github-service-roles/gimmedat-${{ steps.environment.outputs.DEPLOY_ENVIRONMENT }}-spadeploy-ghaction
          role-session-name: GithubDeployAction
          aws-region: eu-central-1

      - name: Upload to S3
        run: |
          make frontend__deploy
        env:
          AWS_DEFAULT_REGION: "eu-central-1"
          ENVIRONMENT: ${{ steps.environment.outputs.DEPLOY_ENVIRONMENT }}
